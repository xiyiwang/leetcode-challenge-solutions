"""
LeetCode Challenge: Remove Palindromic Subsequences (2021-03-08)

Given a string s consisting only of letters 'a' and 'b'. In a single 
step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by 
deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward 
as well as forward.

Constraints:

- 0 <= s.length <= 1000
- s only consists of letters 'a' and 'b'

*Personal Notes*
It's important to know that subsequence is not substring. In this case,
we can remove all a's or b's at the same time, as they're subsequences
of the string.
I got stuck trying to come up with a solution with substrings, but being
a question about subsequence, the solution is a lot simpler.

"""

# runtime - 24 ms (faster than 93.92%)
def removePalindromeSub(s):
    return 0 if s == "" else 1 if s == s[::-1] else 2
